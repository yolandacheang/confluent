---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:$TAG
    container_name: zookeeper
    ports:
      - "22181:22181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2

  kafka:
    image: confluentinc/cp-enterprise-kafka:$TAG
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:22181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: SSL://kafka:19092,PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
    volumes:
      - ${PWD}/secrets:/etc/kafka/secrets

  ksql-server:
    image: confluentinc/cp-ksql-server:$TAG
    hostname: ksql-server
    container_name: ksql-server
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    volumes:
      - $PWD/secrets:/etc/kafka/secrets
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
      KSQL_BOOTSTRAP_SERVERS: "kafka:19092"
      KSQL_HOST_NAME: ksql-server
      KSQL_APPLICATION_ID: "cp-all-in-one"
      KSQL_LISTENERS: "https://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8085"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_LOG4J_ROOT_LOGLEVEL: DEBUG
      KSQL_SECURITY_PROTOCOL: SSL
      KSQL_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/ksql-server.truststore.jks
      KSQL_SSL_TRUSTSTORE_PASSWORD: confluent
      KSQL_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/ksql-server.keystore.jks
      KSQL_SSL_KEYSTORE_PASSWORD: confluent
      KSQL_SSL_KEY_PASSWORD: confluent
      KSQL_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""

  schema-registry:
    image: confluentinc/cp-schema-registry:$TAG
    container_name: schema-registry
    hostname: schema-registry
    depends_on:
      - kafka
    ports:
      - "8085:8085"
    volumes:
      - ${PWD}/secrets:/etc/kafka/secrets
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "SSL://kafka:19092"
      SCHEMA_REGISTRY_LISTENERS: "https://0.0.0.0:8085"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.keystore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.truststore.jks
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.keystore.jks
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_CLIENT_AUTH: "false"
      SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "https"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO



