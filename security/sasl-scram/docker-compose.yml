---
version: '3'
services:
  zookeeper1:
    container_name: zookeeper1
    image: confluentinc/cp-zookeeper:$TAG
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:32888:33888;zookeeper3:42888:43888
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_jaas.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
    volumes:
      - ${PWD}/secrets:/etc/kafka/secrets
    ports:
      - "22181:22181"

  zookeeper2:
    container_name: zookeeper2
    image: confluentinc/cp-zookeeper:$TAG
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:32888:33888;zookeeper3:42888:43888
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_jaas.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
    volumes:
      - ${PWD}/secrets:/etc/kafka/secrets
    ports:
      - "32181:32181"

  zookeeper3:
    container_name: zookeeper3
    image: confluentinc/cp-zookeeper:$TAG
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 42181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:32888:33888;zookeeper3:42888:43888
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_jaas.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
    volumes:
      - ${PWD}/secrets:/etc/kafka/secrets
    ports:
      - "42181:42181"

  scram-config:
    container_name: scram-config
    image: confluentinc/cp-scram-config
    build: ./scram-config
    volumes:
      - ${PWD}/secrets:/etc/kafka/secrets
    environment:
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-enterprise-kafka:$TAG
    # This is required because Kafka can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:22181,zookeeper2:32181,zookeeper3:42181
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka1:19093,PLAINTEXT://kafka1:19094
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: SCRAM-SHA-512
      KAFKA_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256,SCRAM-SHA-512,PLAIN
      KAFKA_LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf"
    volumes:
      - ${PWD}/secrets:/etc/kafka/secrets
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - scram-config
    ports:
      - "19093:19093"
      - "19094:19094"

  kafka2:
    container_name: kafka2
    image: confluentinc/cp-enterprise-kafka:$TAG
    restart: on-failure:3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:22181,zookeeper2:32181,zookeeper3:42181
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka2:29093,PLAINTEXT://kafka2:29094
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: SCRAM-SHA-512
      KAFKA_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256,SCRAM-SHA-512,PLAIN
      KAFKA_LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf"
    volumes:
      - ${PWD}/secrets:/etc/kafka/secrets
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - scram-config
      - kafka1
    ports:
      - "29093:29093"
      - "29094:29094"

  kafka3:
    container_name: kafka3
    image: confluentinc/cp-enterprise-kafka:$TAG
    restart: on-failure:3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:22181,zookeeper2:32181,zookeeper3:42181
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka3:39093,PLAINTEXT://kafka3:39094
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: SCRAM-SHA-512
      KAFKA_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256,SCRAM-SHA-512,PLAIN
      KAFKA_LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf"
    volumes:
      - ${PWD}/secrets:/etc/kafka/secrets
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - scram-config
      - kafka1
      - kafka2
    ports:
      - "39093:39093"
      - "39094:39094"
